@import './../../../styles.scss';

section {
    position: relative;
    display: flex;
    flex-direction: column;
    padding-bottom: 90px;
    max-width: $maxContent;
    overflow: hidden;

    >.head {
        @include dFlex($jc: null, $gap: 50px);
    }
}

.linePurple {
    width: 50px;
    height: 4px;
    background-color: $purple;
    border-radius: 0 4px 4px 0;
}

.content {
    @include dFlex($ai: null, $gap: 150px);
    padding: 85px 100px 0 100px;
}

aside {
    @include dFlex($fd: column, $jc: null, $ai: null, $gap: 35px);

    p {
        font-size: 32px;
        font-weight: 700;
    }
}

form {
    @include dFlex($fd: column, $gap: 40px);

    a {
        color: $purple;

        &:hover {
            text-decoration: underline;
        }
    }

    div {
        position: relative;

        .signal {
            position: absolute;
            top: 10px;
            right: 10px;
        }

        p {
            position: absolute;
            color: red;
            font-weight: 200;
        }
    }
}

input,
textarea {
    font: inherit;
    border: 1px solid $purple;
    border-radius: 10px;
    height: 50px;
    background-color: $background;
    color: white;
    width: 617px;
    padding: 0 25px;

    &::placeholder {
        color: white;
    }

    &:hover {
        cursor: pointer;
        border-color: $green;
    }

    &:focus {
        outline: none;
        /* Entfernt den Standard-Fokusrahmen des Browsers */
        background-color: inherit;
        /* Beibehaltung des ursprünglichen Hintergrunds */
    }

    &:focus::placeholder {
        color: transparent;
    }

    &:valid {
        border-color: $green;
    }
}

textarea {
    min-height: 200px;
    text-wrap: wrap;
    resize: vertical;
    word-break: break-word;
    font-size: 17px;
    padding-top: 12px;
}

.invalidInput {
    border: 1px solid red !important;
}

.checkDiv {
    @include dFlex($jc: null, $ai: flex-start, $fd: column, $gap: 8px);
    font-size: 14px;

    div {
        @include dFlex($jc: center, $gap: 8px);
    }

    p {
        position: absolute;
        top: 30px;
    }
}

.checkbox-container {
    position: relative;
    
    /* Stil für das Label, das kein Häkchen enthält */
    input {
        height: 24px;
        width: 24px;
        border: 2px solid $green;
        border-radius: 0;
        padding: 0;
        background-color: transparent;
        position: relative;
        cursor: pointer;
        appearance: none;
        -webkit-appearance: none;
        -moz-appearance: none;
    }
}

/* Stil für das Label, das das Häkchen enthält */
.checkbox-container input[type="checkbox"]::after {
    content: '\2714';
    width: 12px;
    height: 12px;
    border-width: 0 3px 3px 0;
    display: none;
    color: $green;
    position: absolute;
    left: 3px;
}

/* Wenn die Checkbox aktiviert ist, zeige das Häkchen an */
.checkbox-container input[type="checkbox"]:checked::after {
    display: block;
    text-align: center;
    line-height: 20px;
}

// /* Anpassung der Labelgröße, damit das Häkchen korrekt positioniert wird */
// .checkbox-container label {
//     display: inline-block;
//     width: 24px;
//     height: 24px;
//     cursor: pointer;
// }

// input[type="checkbox"] {
//     height: 24px;
//     width: 24px;
//     border: 2px solid $green;
//     border-radius: 0;
//     padding: 0;
//     content: "";
//     position: relative;
//     background-color: transparent;
//     /* Hintergrundfarbe der Checkbox */
//     appearance: none;
//     /* Entfernt das Standard-Checkbox-Design */
//     -webkit-appearance: none;
//     /* Für Webkit-Browser */
//     -moz-appearance: none;
//     /* Für Mozilla-Browser */

//     &:checked {
//         content: '✓';
//         /* Häkchen bei Aktivierung */
//         color: $green;
//         font-weight: 700;
//         display: block;
//         text-align: center;
//         // line-height: 18px;
//     }
// }


.goUpBtn {
    display: flex;
    justify-content: flex-end;
    padding-top: 51px;

    svg {
        height: 39px;
        width: 39px;

        &:hover {
            rect {
                stroke: $green;
            }

            path {
                fill: $green;
            }
        }
    }
}

// .btnImg {
//     height: 39px;
//     width: 39px;

//     &:hover {
//         fill: green;
//     }
// }

.shadowGreen {
    position: absolute;
    left: -250px;
    bottom: -100px;
    z-index: -1;
    transform: rotate(270deg)
}